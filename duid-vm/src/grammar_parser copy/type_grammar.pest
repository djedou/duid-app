

AlphaUp = _{ 'A'..'Z' }
Alpha = _{ 'a'..'z' | 'A'..'Z' }
Alphanumeric = _{ Alpha | '0'..'9' }
Identifier = @{ (Alpha | "_") ~ (Alphanumeric | "_")* }

TypeName = @{ AlphaUp ~ Alpha }
TypeDecl = { "type" ~ TypeName }
CustomTypeDecl = { "type" ~ TypeName ~ "=" ~ "\n"? ~ (TypeName ~ StringContent ~ "|"? )+ }

//TypeAlliasDecl = {  }
CustomTypeDecl = { "type" ~ TypeName ~ "=" ~ "\n"? ~ (TypeName ~ StringContent ~ "|"? )+ }

BlockStart = { "{" }
BlockEnd = { "}" }
Block = _{ BlockStart ~ ANY* ~ BlockEnd }

Semi = _{ ";" }
WHITESPACE = _{ " " | "\t" | "\r" | "\n" }
Visible = { "pub" }
Use = { "use" }
Mod = { "mod" }
AccessOp = { "." }
ParenOpen = { "(" }
ParenClose = { ")" }

/// Function
FieldAccess = { Identifier ~ "." ~ Identifier ~ FuncParams? }
FuncParams = { ParenOpen ~ ((Expr | Identifier) ~ ",")* ~ (Expr | Identifier)? ~ ParenClose }
FuncArg = { Identifier ~ WHITESPACE? ~ ":" ~ WHITESPACE? ~ Type }
FuncArgs = { ParenOpen ~ (FuncArg ~ ",")* ~ FuncArg? ~ ParenClose }
FuncCall = { Identifier ~ FuncParams }
FuncReturnTy = { Type | Identifier }
FuncDefinition = { Identifier ~ FuncArgs ~ WHITESPACE? ~ "->" ~ WHITESPACE? ~ FuncReturnTy ~ Block }
FuncVisPub = @{ Visible? ~ WHITESPACE ~ Func ~ WHITESPACE }
FuncVisPri = @{ Func ~ WHITESPACE }
FuncVis = _{ FuncVisPub | FuncVisPri }
FuncDecl = { FuncVis ~ FuncDefinition }