mod std::primitives_types;

/*
manger
*/
/* hgjklk*/

pub struct Int8;

pub struct Int {
    pub value: Int8,
    pub value: Int8
}

pub struct TupleStruct(Int8, Int32, Int64);

struct Int8;

struct Int {
    pub value: Int8,
    pub value: Int8
}

struct TupleStruct(Int8,Int32,Int64);
pub enum Enuma<Ty> {
    Abi(Int8,Int32,Int64),
    Value,
    StructEnum {
        b: Int8,
        c: Ty
    }
}

pub enum Enuma<Ty:Int> {
    Abi(Int8,Int32,Int64),
    Value,
    StructEnum {
        b: Int8,
        c: Ty
    }
}


impl Int8 {
    fn new() -> Int8 {
        return Int8;
    }
}

pub fn add(Int8, Int8) -> Int8 {
    let c = a + b;
    return c;
}