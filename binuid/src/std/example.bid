
25:i16;
200;
-23:i16;
-24:i32;
-25:i8;
30.:f32;
-30.:f32;
-40.:f64;
!30:i8;
!45:i64;
!true;
!false;
100;

-100 - 25;
-100 + 25;
-100.50 + 25.24;
25 * 10;
25.89 * 14.6;
25 / 10;
25.89 / 14.6;
25 % 10;
25.89 % 14.6;

xFF;
x00:byte;
value:byte;
true;
false:bool;
value:bool;
25.58;
25.;
25.8:f32;
value:f32;
value:f64;

25;
25:i8;
value:i8;
25:i16;
value:i16;
25:i32;
value:i32;
25:i64;
25:i128;
25:u8;
25:u16;
25:u32;
25:u64;
25:u128;
value:u128;
"25";
'a';
/*value: str;
value:char;
value:unit;
*/

25:Int8 - 30:Int8
!false;
120.:Float64 - 50.9:Float64;

2 * 50;
50 / 50;
33 % 5;
true & true;
true & false;
false & false;
false ^ false;
false | true;
true | false;
12 >> 2
12 << 2
25 == 25;
25 <= 25;
25 >= 25;
25 < 25;
25 > 25;
25 != 25;
24.9 < 24.8;
24.9:f64 > 24.8:f64;
true || false;
false || true;
false || false;
true || true;
true && false;
false && true;
false && false;
true && true;
